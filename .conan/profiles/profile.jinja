include(default)

{% set compiler = os.getenv("Compiler") %}

{% if compiler == 'apple-clang' %}
{% set version = os.getenv("Version") or "12.0" %}
{% elif compiler == 'clang' %}
{% set version = os.getenv("Version") or "12" %}
{% elif compiler == 'gcc' %}
{% set version = os.getenv("Version") or "10" %}
{% elif compiler == 'msvc' %}
{% set version = os.getenv("Version") or "19.29" %}
{% endif %}

{% set arch_target = os.getenv("Arch") or "x86_64" %}
{% set build_type = os.getenv("BuildType") or "Debug" %}

{% set tests = os.getenv("Tests") or False %}
{% set sanitizer = os.getenv("Sanitizer") or None %}
{% set coverage = os.getenv("Coverage") or False %}
{% set clang_tidy = os.getenv("ClangTidy") or '' %}
{% set cppcheck = os.getenv("CppCheck") or '' %}
{% set cpplint = os.getenv("CppLint") or '' %}
{% set iwyu = os.getenv("IncludeWhatYouUse") or '' %}
{% set lwyu = os.getenv("LinkWhatYouUse") or False %}

{% if platform.system() == "Windows" %}

{% if compiler == 'msvc' %}
{% set runtime = os.getenv("Runtime") or "static" %}
{% set runtime_type = os.getenv("RuntimeType") or "Debug" %}
{% elif compiler == 'clang' %}
{% set runtime = os.getenv("Runtime") or "MTd" %}
{% set flags = '-Wno-unused-command-line-argument -Wno-microsoft-enum-value' %}
{% endif %}

{% endif %}


[settings]
arch_target={{ arch_target }}
build_type={{ build_type }}
compiler={{ compiler }}
compiler.version={{ version }}
compiler.cppstd=17

{% if compiler == 'apple-clang' %}
compiler.libcxx=libc++
{% elif compiler != 'msvc' %}
compiler.libcxx=libstdc++11
{% endif %}

{% if platform.system() == "Windows" %}
{% if compiler == 'clang' %}
compiler.runtime={{ runtime }}
{% elif compiler == 'msvc' %}
compiler.runtime={{ runtime }}
compiler.runtime_type={{ runtime_type }}
{% endif %}
{% endif %}


[options]
sanitizer={{ sanitizer }}
coverage={{ coverage }}
tests={{ tests }}
clang_tidy={{ clang_tidy }}
cppcheck={{ cppcheck }}
cpplint={{ cpplint }}
iwyu={{ iwyu }}
lwyu={{ lwyu }}


[env]
{% if compiler == 'clang' and platform.system() == "Windows" %}
CC="C:/Program Files/LLVM/bin/clang"
CXX="C:/Program Files/LLVM/bin/clang++"
{% elif compiler == 'clang' %}
CC=clang-{{ version }}
CXX=clang++-{{ version }}
{% elif compiler == 'apple-clang' %}
CC=clang
CXX=clang++
{% elif compiler == 'gcc' %}
CC=gcc-{{ version }}
CXX=g++-{{ version }}
{% endif %}

{% if sanitizer == 'ASan' %}
CFLAGS=-fsanitize=address {{ flags }}
CXXFLAGS=-fsanitize=address {{ flags }}
{% elif sanitizer == 'TSan' %}
CFLAGS=-fsanitize=thread {{ flags }}
CXXFLAGS=-fsanitize=thread {{ flags }}
{% elif sanitizer == 'UBSan' %}
CFLAGS=-fsanitize=undefined {{ flags }}
CXXFLAGS=-fsanitize=undefined {{ flags }}
{% elif coverage %}
CFLAGS=--coverage {{ flags }}
CXXFLAGS=--coverage {{ flags }}
{% elif compiler != 'msvc' %}
CFLAGS={{ flags }}
CXXFLAGS={{ flags }}
{% endif %}
