name: coverage

on:
  push:
  pull_request:
  schedule:
    # https://crontab.guru/
    # At 12:00 AM, only on Monday
    - cron: 0 0 * * 1

env:
  build-folder: build
  python-version: 3.9

jobs:
  coverage:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - name: Coverage
            os: ubuntu-latest
            compiler: gcc
            build_type: Debug
            tool: gcov-10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install requirements
        run: python -m pip install --upgrade pip conan

      - name: Install dependencies
        run: conan install . -if ${{ env.build-folder }} --build outdated
          -o system_requirements=True
          -pr .conan/profiles/profile.jinja -pr:b .conan/profiles/profile.jinja
        env:
          Compiler: ${{ matrix.config.compiler }}
          Tests: 'True'
          Coverage: 'True'

      - name: Build
        run: conan build . -bf ${{ env.build-folder }}

      - name: Test
        run: ctest -C ${{ matrix.config.build_type }}
          --output-on-failure
          --repeat-until-fail 1
          --test-dir ${{ env.build-folder }}
          --output-junit report.xml
          --timeout 120

      - name: Coverage
        shell: bash
        run: |
          find . -type f -name "*.gcda" -exec lcov --gcov-tool /usr/bin/${{ matrix.config.tool }} --directory {} --capture --output-file $(basename {}).info \;
          find . -type f -name "*.gcno" -exec lcov --gcov-tool /usr/bin/${{ matrix.config.tool }} --directory {} --capture --output-file $(basename {}).info \;
          find . -type f -name "*.info" -exec echo "--add-tracefile {}" \; | xargs lcov --gcov-tool /usr/bin/${{ matrix.config.tool }} --output-file coverage.info
          lcov --gcov-tool /usr/bin/${{ matrix.config.tool }} --remove coverage.info "/usr/*" "${HOME}/.conan/*" "$(pwd)/${{ env.build-folder }}/*" --output-file coverage.info
          lcov --gcov-tool /usr/bin/${{ matrix.config.tool }} --list coverage.info
          genhtml -o report coverage.info

      - name: Publish Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: report

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: ${{ env.build-folder }}/*.xml

      - name: Publish Coverage Results to Codecov
        uses: codecov/codecov-action@v1
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.info
          flags: unittests
          name: codecov-umbrella
